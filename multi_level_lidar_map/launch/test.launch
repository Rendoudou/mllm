<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <!-- args -->
    <arg name="use_rviz" default="true"/>
    <arg name="publish_covariance" default="false"/>
    <param name="/use_sim_time" value="true"/>

    <!-- static transform publisher -->
    #### publish an example base_link -> laser_frame transform #####
    #### publish an example world -> odom transform ################
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser"
          args="0 0 0 0 0 0 /base_link /laser_frame" output="screen"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_odom"
          args="0 0 0 0 0 0 /map /odom" output="screen"/>

    <!-- 播放bag包 -->
    <node pkg="rosbag" type="play" name="play" required="false"
          args="$(find multi_level_lidar_map)/hokuyo_laser_scan_0531.bag --delay=10 --clock"/>

    <!-- 启动滤波器 -->
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
        #### 加载滤波器参数 ######
        <rosparam command="load" file="$(find multi_level_lidar_map)/config/hokuyo_filter.yaml" />
        <!-- remap from="scan" to="base_scan" -->
    </node>

    <!-- 启动配准 -->
    #### start the laser scan_matcher ##############################
    <group if="$(arg publish_covariance)">
        <param name="laser_scan_matcher_node/do_compute_covariance" value="1"/>
        <param name="laser_scan_matcher_node/publish_pose_with_covariance" value="true"/>
        <param name="laser_scan_matcher_node/publish_pose_with_covariance_stamped" value="true"/>
    </group>

    <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
        #### 固定坐标系 #########
        <param name="fixed_frame" value="odom"/>      #### 固定坐标系
        #### 可使用的额外信息 ####
        <param name="use_imu" value="false"/>         #### 是否有可用的imu
        <param name="use_odom" value="false"/>        #### 是否有可用的odom
        <param name="use_vel" value="false"/>         #### 是否有可用的vel
        #### 发布项目 ###########
        <param name="publish_pose" value="false"/>        #### 发布位姿
        <param name="publish_pose_stamped" value="true"/> #### 发布带有时间戳的位姿
        #### 关键帧要求 #########
        <param name="kf_dist_linear" value="0.1"/>    #### 关键帧需要移动的距离
        <param name="kf_dist_angular" value="0.175"/> #### 关键帧需要变动的角度,0.175rad,10度
        #### icp参数配置 ########
        <param name="max_iterations" value="20"/>     #### 最大迭代次数
    </node>

    <!-- laser 转 point cloud -->
    <node pkg="scan_to_cloud_converter" type="scan_to_cloud_converter_node" name="scan_to_cloud_converter_node" output="screen">
        <param name="sub_scan_topic" value="scan_filtered"/>  #### 接受的laser话题
        <param name="pub_pc_topic" value="scan_2_pc"/>        #### 发布的点云话题
    </node>

    <!-- syncPosePC 同步节点 -->
    <node pkg="multi_level_lidar_map" type="syncPosePC" name="syncPosePC" output="screen">
        <param name="scan_2_pc_topic" value="scan_2_pc"/>     #### 接收的laser转点云消息
        <param name="node_liner_limit" value="0.3"/>          #### 节点距离变化限制
        <param name="node_angular_limit" value="1.57"/>       #### 节点角度变化限制
    </node>

    <!-- 生成栅格地图 -->
    <node pkg="multi_level_lidar_map" type="createGridMap" name="createGridMap" output="screen">
    </node>

    <!-- 保存关键帧节点位姿节点 -->
    <node pkg="multi_level_lidar_map" type="savePose" name="savePose" output="screen">
        <param name="save_path" value="/home/RJY/catkin_ws_multi_level_map/src/multi_level_lidar_map/key_frame_pose/key_frame_pose.yaml"/>
    </node>

    <!-- 保存关键帧节点的点云与描述子 -->
    <node pkg="multi_level_lidar_map" type="saveORBPcd" name="saveORBPcd" output="screen">
    </node>

    <!-- rviz -->
    <group if="$(arg use_rviz)">
        <node pkg="rviz" type="rviz" name="rviz_multi_level_lidar_map" required="true"
              args="-d $(find multi_level_lidar_map)/rvizs/view.rviz"/>
    </group>

</launch>